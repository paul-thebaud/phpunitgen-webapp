name: CICD

on:
  push:
    branches:
      - master
      - develop

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.11.0
        with:
          php-version: 7.4
          
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.2
        
      - name: before_script
        run: |
          phpenv config-rm xdebug.ini || echo "xdebug not available"
          composer self-update
          composer install --no-interaction --no-suggest --no-progress
          yarn install --non-interactive
          
      - name: script
        run: |
          yarn lint
          yarn build
          
      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: xdebug
          
      - name: phpunit
        run: |
          ./vendor/bin/phpunit -c phpunit.xml.dist --coverage-clover=coverage-report.clover --log-junit=test-report.xml
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage-report.clover
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        id: docker_build_php
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/master'
        with:
          file: ./docker/production/Dockerfile-phpfpmalpine
          build-args: MIX_GOOGLE_ANALYTICS_ID="$MIX_GOOGLE_ANALYTICS_ID"
          push: true
          tags: paulthebaud/phpunitgen-phpfpm:latest
        env:
          MIX_GOOGLE_ANALYTICS_ID: ${{ secrets.MIX_GOOGLE_ANALYTICS_ID }}
          
      - name: Build and push
        id: docker_build_nginx
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/master'
        with:
          file: ./docker/production/Dockerfile-nginxalpine
          build-args: MIX_GOOGLE_ANALYTICS_ID="$MIX_GOOGLE_ANALYTICS_ID"
          push: true
          tags: paulthebaud/phpunitgen-nginx:latest
        env:
          MIX_GOOGLE_ANALYTICS_ID: ${{ secrets.MIX_GOOGLE_ANALYTICS_ID }}

      - name: Build and push
        id: docker_build_php_staging
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/develop'
        with:
          file: ./docker/production/Dockerfile-phpfpmalpine
          build-args: MIX_GOOGLE_ANALYTICS_ID="$MIX_GOOGLE_ANALYTICS_ID"
          push: true
          tags: paulthebaud/phpunitgen-phpfpm:latest
        env:
          MIX_GOOGLE_ANALYTICS_ID: ${{ secrets.MIX_GOOGLE_ANALYTICS_ID }}
          
      - name: Build and push
        id: docker_build_nginx_staging
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/develop'
        with:
          file: ./docker/production/Dockerfile-nginxalpine
          build-args: MIX_GOOGLE_ANALYTICS_ID="$MIX_GOOGLE_ANALYTICS_ID"
          push: true
          tags: paulthebaud/phpunitgen-nginx:latest
        env:
          MIX_GOOGLE_ANALYTICS_ID: ${{ secrets.MIX_GOOGLE_ANALYTICS_ID }}

      - name: Update deployment
        uses: steebchen/kubectl@v2.0.0
        if: github.ref == 'refs/heads/master'
        with:
          config: ${{ secrets.KUBE_CONFIG }}
          command: apply -k kubernetes/production/

      - name: Update deployment_staging
        uses: steebchen/kubectl@v2.0.0
        if: github.ref == 'refs/heads/develop'
        with:
          config: ${{ secrets.KUBE_CONFIG }}
          command: apply -k kubernetes/staging/
